*finish

*comment This subroutine increments skills
*comment this should probably be a command...
*comment params:
*comment    GP_arg0 (string) - the skill to be incremented.
*comment return:
*comment    None
*label IncrementSkill
*if GP_arg0 = "Endurance"
    *set Endurance +1
*elseif GP_arg0 = "Strength"
    *set Strength +1
*elseif GP_arg0 = "Presence"
    *set Presence +1
*elseif GP_arg0 = "Courage"
    *set Courage +1
*elseif GP_arg0 = "ReactionSpeed"
    *set ReactionSpeed +1
*elseif GP_arg0 = "Stealth"
    *set Stealth +1
*elseif GP_arg0 = "MotorSkill"
    *set MotorSkill +1
*elseif GP_arg0 = "Acrobatics"
    *set Acrobatics +1
*elseif GP_arg0 = "Improvisation"
    *set Improvisation +1
*elseif GP_arg0 = "Knowledge"
    *set Knowledge +1
*elseif GP_arg0 = "Medical"
    *set Medical +1
*elseif GP_arg0 = "Speechcraft"
    *set Speechcraft +1
*else
    *bug Could not find "${GP_arg0}" to increment itâ€¦

*comment TODO: Add magic skills

*gosub UpdateAttributes 
*return

*comment This subroutine updates attributes based on skills
*comment params:
*comment    None
*comment return:
*comment    None
*label UpdateAttributes

*comment Current equations for interaction between attribute and skill values based on Attributes Documentation for after Phase 1
*comment These are the attribute totals after getting the average of the skills
*comment and then adding it to the base attribute values from Phase 1
*comment *set Brawn_SKL_Total Brawn + ((((Endurance + Strength) + Presence) + Courage) / 4)
*comment *set Agility_SKL_Total Agility + ((((ReactionSpeed + Stealth) + MotorSkill) + Acrobatics) / 4)
*comment *set Cunning_SKL_Total Cunning + ((((Improvisation + Knowledge) + Medical) + Speechcraft) / 4)

*comment These are the attribute totals rounded down for cleaner display to the user
*comment and for use as whole numbers where every 4 skills is an attribute value increase
*comment *set Brawn (Brawn_SKL_Total - (Brawn_SKL_Total modulo 1))
*comment *set Agility (Agility_SKL_Total - (Agility_SKL_Total modulo 1))
*comment *set Cunning (Cunning_SKL_Total - (Cunning_SKL_Total modulo 1))

*comment TODO: Add magic attribute

*return

*comment This function randomly determines if a random chance passes
*comment params:
*comment    GP_arg0 (attr) - the attribute to be tested.
*comment    GP_arg1 (succPercent) - what chance needs to be greater than.
*comment return:
*comment    returnData (bool) - returns if the check succeeded or failed.
*label AttributeSkillCheckBase

*temp attr GP_arg0
*temp succPercent GP_arg1

*temp rng 0
*rand rng 0 attr

*set returnData (attr * succPercent) >= rng

*return

*comment This function randomly determines if a random chance passes
*comment WARNING: This subroutine replaces GP_arg1 with the corresponding success percentage.
*comment params:
*comment    GP_arg0 (attr) - the attribute to be tested.
*comment    GP_arg1 (difficulty) - Difficulty Level.
*comment return:
*comment    returnData (bool) - returns if the check succeeded or failed.
*label AttributeSkillCheck
*temp attr GP_arg0
*temp difficulty GP_arg1

*if (difficulty = "trivial")
    *set GP_arg1 0.80
    *gosub AttributeSkillCheckBase
    *return
*elseif (difficulty = "simple")
    *set GP_arg1 0.70
    *gosub AttributeSkillCheckBase
    *return
*elseif (difficulty = "moderate")
    *set GP_arg1 0.60
    *gosub AttributeSkillCheckBase
    *return
*elseif (difficulty = "challenging")
    *set GP_arg1 0.50
    *gosub AttributeSkillCheckBase
    *return
*elseif (difficulty = "difficult")
    *set GP_arg1 0.35
    *gosub AttributeSkillCheckBase
    *return
*elseif (difficulty = "extreme")
    *set GP_arg1 0.15
    *gosub AttributeSkillCheckBase
    *return
*elseif (difficulty = "impossible")
    *set returnData false
    *return
*bug Somehow, "RollChanceOnAttribute" failed. Is "${difficulty}" spelled correctly? 

*comment DUPLICATE!!!
*comment This subroutine calculates and sets all base attributes
*comment params:
*comment    NONE
*comment return:
*comment    NONE
*label CalcAllAttributes
*comment brawn sub-attributes
*set Brawn ((Endurance + Strength) + Presence) + Courage

*comment agility sub-attributes
*set Agility ((ReactionSpeed + Stealth) + MotorSkill) + Acrobatics



*comment Originally in the choicescript_stats scene, now a subroutine in the general scene for organization purposes
*comment Updates the relationship and reputation percentages, trends, and affinity/rep statuses
*label UpdateRelRepMeters
*if rel_val_Cel > 0
    *set relationship_Cel_percentage ((rel_val_Cel modulo relationship_max_xp) / relationship_max_xp) * 100
*else
    *set relationship_Cel_percentage (((rel_val_Cel * (0 - 1)) modulo relationship_max_xp) / relationship_max_xp) * 100
*if rel_val_Ivy > 0
    *set relationship_Ivy_percentage ((rel_val_Ivy modulo relationship_max_xp) / relationship_max_xp) * 100
*else
    *set relationship_Ivy_percentage (((rel_val_Ivy * (0 - 1)) modulo relationship_max_xp) / relationship_max_xp) * 100
*if rel_val_Rip > 0
    *set relationship_Rip_percentage ((rel_val_Rip modulo relationship_max_xp) / relationship_max_xp) * 100
*else
    *set relationship_Rip_percentage (((rel_val_Rip * (0 - 1)) modulo relationship_max_xp) / relationship_max_xp) * 100
*comment This cleans up the decimal of the percentage for better user display
*set relationship_Cel_percentage relationship_Cel_percentage - (relationship_Cel_percentage modulo 1)
*set relationship_Ivy_percentage relationship_Ivy_percentage - (relationship_Ivy_percentage modulo 1)
*set relationship_Rip_percentage relationship_Rip_percentage - (relationship_Rip_percentage modulo 1)

*if (rel_val_Cel > (0 - 250)) and (rel_val_Cel < 250)
    *set rel_status_Cel rel_status_4
    *if rel_val_Cel < 0
        *set trend_Cel "Negative"
    *elseif rel_val_Cel > 0
        *set trend_Cel "Positive"
    *elseif rel_val_Cel = 0
        *set trend_Cel "N/A"
*elseif rel_val_Cel < 0
    *set trend_Cel "Negative"
    *if (rel_val_Cel < (0 - 250)) and (rel_val_Cel > ((0 - 250) - 250))
        *set rel_status_Cel rel_status_5
    *elseif (rel_val_Cel < ((0 - 250) - 250)) and (rel_val_Cel > ((0 - 250) - 500))
        *set rel_status_Cel rel_status_6
    *elseif (rel_val_Cel < ((0 - 250) - 500)) and (rel_val_Cel > ((0 - 250) - 750))
        *set rel_status_Cel rel_status_7
    *elseif (rel_val_Cel <= ((0 - 250) - 750))
        *set rel_status_Cel rel_status_8
        *set relationship_Cel_percentage 100
        *set rel_val_Cel (0 - 1000)
*elseif rel_val_Cel > 0
    *set trend_Cel "Positive"
    *if (rel_val_Cel > 250) and (rel_val_Cel < 500)
        *set rel_status_Cel rel_status_3
    *elseif (rel_val_Cel > 500) and (rel_val_Cel < 750)
        *set rel_status_Cel rel_status_2
    *elseif (rel_val_Cel > 750) and (rel_val_Cel < 1000)
        *set rel_status_Cel rel_status_1
    *elseif rel_val_Cel >= 1000
        *set rel_status_Cel rel_status_0
        *set relationship_Cel_percentage 100
        *set rel_val_Cel 1000
*else
    *set rel_status_Cel rel_status_4

*if (rel_val_Ivy > (0 - 250)) and (rel_val_Ivy < 250)
    *set rel_status_Ivy rel_status_4
    *if rel_val_Ivy < 0
        *set trend_Ivy "Negative"
    *elseif rel_val_Ivy > 0
        *set trend_Ivy "Positive"
    *elseif rel_val_Ivy = 0
        *set trend_Ivy "N/A"
*elseif rel_val_Ivy < 0
    *set trend_Ivy "Negative"
    *if (rel_val_Ivy < (0 - 250)) and (rel_val_Ivy > ((0 - 250) - 250))
        *set rel_status_Ivy rel_status_5
    *elseif (rel_val_Ivy < ((0 - 250) - 250)) and (rel_val_Ivy > ((0 - 250) - 500))
        *set rel_status_Ivy rel_status_6
    *elseif (rel_val_Ivy < ((0 - 250) - 500)) and (rel_val_Ivy > ((0 - 250) - 750))
        *set rel_status_Ivy rel_status_7
    *elseif (rel_val_Ivy <= ((0 - 250) - 750))
        *set rel_status_Ivy rel_status_8
        *set relationship_Ivy_percentage 100
        *set rel_val_Ivy (0 - 1000)
*elseif rel_val_Ivy > 0
    *set trend_Ivy "Positive"
    *if (rel_val_Ivy > 250) and (rel_val_Ivy < 500)
        *set rel_status_Ivy rel_status_3
    *elseif (rel_val_Ivy > 500) and (rel_val_Ivy < 750)
        *set rel_status_Ivy rel_status_2
    *elseif (rel_val_Ivy > 750) and (rel_val_Ivy < 1000)
        *set rel_status_Ivy rel_status_1
    *elseif rel_val_Ivy >= 1000
        *set rel_status_Ivy rel_status_0
        *set relationship_Ivy_percentage 100
        *set rel_val_Ivy 1000
*else
    *set rel_status_Ivy rel_status_4

*if (rel_val_Rip > (0 - 250)) and (rel_val_Rip < 250)
    *set rel_status_Rip rel_status_4
    *if rel_val_Rip < 0
        *set trend_Rip "Negative"
    *elseif rel_val_Rip > 0
        *set trend_Rip "Positive"
    *elseif rel_val_Rip = 0
        *set trend_Rip "N/A"
*elseif rel_val_Rip < 0
    *set trend_Rip "Negative"
    *if (rel_val_Rip < (0 - 250)) and (rel_val_Rip > ((0 - 250) - 250))
        *set rel_status_Rip rel_status_5
    *elseif (rel_val_Rip < ((0 - 250) - 250)) and (rel_val_Rip > ((0 - 250) - 500))
        *set rel_status_Rip rel_status_6
    *elseif (rel_val_Rip < ((0 - 250) - 500)) and (rel_val_Rip > ((0 - 250) - 750))
        *set rel_status_Rip rel_status_7
    *elseif (rel_val_Rip <= ((0 - 250) - 750))
        *set rel_status_Rip rel_status_8
        *set relationship_Rip_percentage 100
        *set rel_val_Rip (0 - 1000)
*elseif rel_val_Rip > 0
    *set trend_Rip "Positive"
    *if (rel_val_Rip > 250) and (rel_val_Rip < 500)
        *set rel_status_Rip rel_status_3
    *elseif (rel_val_Rip > 500) and (rel_val_Rip < 750)
        *set rel_status_Rip rel_status_2
    *elseif (rel_val_Rip > 750) and (rel_val_Rip < 1000)
        *set rel_status_Rip rel_status_1
    *elseif rel_val_Rip >= 1000
        *set rel_status_Rip rel_status_0
        *set relationship_Rip_percentage 100
        *set rel_val_Rip 1000
*else
    *set rel_status_Rip rel_status_4

*if rep_val_Flames > 0
    *set reputation_Flames_percentage ((rep_val_Flames modulo reputation_max_xp) / reputation_max_xp) * 100
*else
    *set reputation_Flames_percentage (((rep_val_Flames * (0 - 1)) modulo reputation_max_xp) / reputation_max_xp) * 100
*if rep_val_Wolves > 0
    *set reputation_Wolves_percentage ((rep_val_Wolves modulo reputation_max_xp) / reputation_max_xp) * 100
*else
    *set reputation_Wolves_percentage (((rep_val_Wolves * (0 - 1)) modulo reputation_max_xp) / reputation_max_xp) * 100

*set reputation_Flames_percentage reputation_Flames_percentage - (reputation_Flames_percentage modulo 1)
*set reputation_Wolves_percentage reputation_Wolves_percentage - (reputation_Wolves_percentage modulo 1)

*if (rep_val_Flames > (0 - 50)) and (rep_val_Flames < 50)
    *set rep_status_Flames rep_status_2
    *if rep_val_Flames < 0
        *set trend_Flames "Negative"
    *elseif rep_val_Flames > 0
        *set trend_Flames "Positive"
    *elseif rep_val_Flames = 0
        *set trend_Flames "N/A"
*elseif rep_val_Flames < 0
    *set trend_Flames "Negative"
    *if (rep_val_Flames < (0 - 50)) and (rep_val_Flames > ((0 - 50) - 50))
        *set rep_status_Flames rep_status_3
    *elseif rep_val_Flames <= ((0 - 50) - 50)
        *set rep_status_Flames rep_status_4
        *set reputation_Flames_percentage 100
        *set rep_val_Flames (0 - 100)
*elseif rep_val_Flames > 0
    *set trend_Flames "Positive"
    *if (rep_val_Flames > 50) and (rep_val_Flames < 100)
        *set rep_status_Flames rep_status_1
    *elseif rep_val_Flames >= 100
        *set rep_status_Flames rep_status_0
        *set reputation_Flames_percentage 100
        *set rep_val_Flames 100
*else
    *set rep_val_Flames rep_status_2

*if (rep_val_Wolves > (0 - 50)) and (rep_val_Wolves < 50)
    *set rep_status_Wolves rep_status_2
    *if rep_val_Wolves < 0
        *set trend_Wolves "Negative"
    *elseif rep_val_Wolves > 0
        *set trend_Wolves "Positive"
    *elseif rep_val_Wolves = 0
        *set trend_Wolves "N/A"
*elseif rep_val_Wolves < 0
    *set trend_Wolves "Negative"
    *if (rep_val_Wolves < (0 - 50)) and (rep_val_Wolves > ((0 - 50) - 50))
        *set rep_status_Wolves rep_status_3
    *elseif rep_val_Wolves <= ((0 - 50) - 50)
        *set rep_status_Wolves rep_status_4
        *set reputation_Wolves_percentage 100
        *set rep_val_Wolves (0 - 100)
*elseif rep_val_Wolves > 0
    *set trend_Wolves "Positive"
    *if (rep_val_Wolves > 50) and (rep_val_Wolves < 100)
        *set rep_status_Wolves rep_status_1
    *elseif rep_val_Wolves >= 100
        *set rep_status_Wolves rep_status_0
        *set reputation_Wolves_percentage 100
        *set rep_val_Wolves 100
*else
    *set rep_val_Wolves rep_status_2

*return